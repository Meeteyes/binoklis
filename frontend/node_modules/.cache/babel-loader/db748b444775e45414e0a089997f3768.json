{"ast":null,"code":"var _jsxFileName = \"/Users/reinis/Desktop/Technigo/final-project/frontend/src/components/SelectDate.js\";\nimport React, { useState } from \"react\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport order from \"../reducers/order\"; // set the language for date picker\n\nimport dateFnsLv from \"date-fns/locale/lv\";\nregisterLocale(\"lv\", dateFnsLv);\n\nconst SelectDate = () => {\n  const dispatch = useDispatch();\n  const store = useSelector(store => store);\n  const [eventDate, setEventDate] = useState(new Date());\n\n  const handleDateSelect = date => {\n    dispatch(store.order.actions.setDate(date));\n  };\n\n  return /*#__PURE__*/React.createElement(DatePicker, {\n    locale: \"lv\",\n    minDate: new Date(),\n    selected: eventDate,\n    onChange: date => handleDateSelect(date),\n    excludeDates: [new Date(2022, 0, 24), new Date(2022, 0, 27)],\n    placeholderText: \"Select a date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SelectDate;","map":{"version":3,"sources":["/Users/reinis/Desktop/Technigo/final-project/frontend/src/components/SelectDate.js"],"names":["React","useState","DatePicker","registerLocale","useDispatch","useSelector","order","dateFnsLv","SelectDate","dispatch","store","eventDate","setEventDate","Date","handleDateSelect","date","actions","setDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,IAAqBC,cAArB,QAA2C,kBAA3C;AACA,OAAO,4CAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACAJ,cAAc,CAAC,IAAD,EAAOI,SAAP,CAAd;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAAEK,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAIY,IAAJ,EAAD,CAA1C;;AAEA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjCN,IAAAA,QAAQ,CAACC,KAAK,CAACJ,KAAN,CAAYU,OAAZ,CAAoBC,OAApB,CAA4BF,IAA5B,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAC,IADT;AAEE,IAAA,OAAO,EAAE,IAAIF,IAAJ,EAFX;AAGE,IAAA,QAAQ,EAAEF,SAHZ;AAIE,IAAA,QAAQ,EAAGI,IAAD,IAAUD,gBAAgB,CAACC,IAAD,CAJtC;AAKE,IAAA,YAAY,EAAE,CAAC,IAAIF,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAD,EAAwB,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAxB,CALhB;AAME,IAAA,eAAe,EAAC,eANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAnBD;;AAqBA,eAAeL,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport order from \"../reducers/order\";\n\n// set the language for date picker\nimport dateFnsLv from \"date-fns/locale/lv\";\nregisterLocale(\"lv\", dateFnsLv);\n\nconst SelectDate = () => {\n  const dispatch = useDispatch();\n  const store = useSelector((store) => store);\n  const [eventDate, setEventDate] = useState(new Date());\n\n  const handleDateSelect = (date) => {\n    dispatch(store.order.actions.setDate(date));\n  };\n\n  return (\n    <DatePicker\n      locale=\"lv\"\n      minDate={new Date()}\n      selected={eventDate}\n      onChange={(date) => handleDateSelect(date)}\n      excludeDates={[new Date(2022, 0, 24), new Date(2022, 0, 27)]}\n      placeholderText=\"Select a date\"\n    />\n  );\n};\n\nexport default SelectDate;\n"]},"metadata":{},"sourceType":"module"}