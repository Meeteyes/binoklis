{"ast":null,"code":"var _jsxFileName = \"/Users/reinis/Desktop/Technigo/final-project/frontend/src/components/InputForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCities } from \"../reducers/cities\";\nimport order from \"../reducers/order\";\nimport { createSelectOptions, printThis } from \"../constants/functions\";\nconst SelectContainer = styled.form`\n  width: 200px;\n`;\n\nconst InputForm = () => {\n  // ----- variables -----\n  const dispatch = useDispatch();\n  const store = useSelector(store => store);\n  const [city, setCity] = useState([]); // we create an array with a slice of store that is shown inside the Select\n\n  const options = createSelectOptions(store.cities.list); // we call thunk in redux store to fetch from API\n\n  useEffect(() => {\n    dispatch(fetchCities());\n  }, [dispatch]); // Rendering the element\n\n  return /*#__PURE__*/React.createElement(SelectContainer, {\n    onSubmit: event => printThis(event, city),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    width: \"200px\",\n    options: options,\n    onChange: event => dispatch(order.actions.setCity(event.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Submit this MF\"));\n};\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/reinis/Desktop/Technigo/final-project/frontend/src/components/InputForm.js"],"names":["React","useState","useEffect","Select","styled","useDispatch","useSelector","fetchCities","order","createSelectOptions","printThis","SelectContainer","form","InputForm","dispatch","store","city","setCity","options","cities","list","event","actions","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,mBAAT,EAA8BC,SAA9B,QAA+C,wBAA/C;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,IAAK;AACpC;AACA,CAFA;;AAIA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGT,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC,CAJsB,CAMtB;;AACA,QAAMiB,OAAO,GAAGT,mBAAmB,CAACM,KAAK,CAACI,MAAN,CAAaC,IAAd,CAAnC,CAPsB,CAStB;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT,CAVsB,CActB;;AACA,sBACE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAGO,KAAD,IAAWX,SAAS,CAACW,KAAD,EAAQL,IAAR,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAGG,KAAD,IAAWP,QAAQ,CAACN,KAAK,CAACc,OAAN,CAAcL,OAAd,CAAsBI,KAAK,CAACE,KAA5B,CAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAUD,CAzBD;;AA2BA,eAAeV,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCities } from \"../reducers/cities\";\nimport order from \"../reducers/order\";\nimport { createSelectOptions, printThis } from \"../constants/functions\";\n\nconst SelectContainer = styled.form`\n  width: 200px;\n`;\n\nconst InputForm = () => {\n  // ----- variables -----\n  const dispatch = useDispatch();\n  const store = useSelector((store) => store);\n  const [city, setCity] = useState([]);\n\n  // we create an array with a slice of store that is shown inside the Select\n  const options = createSelectOptions(store.cities.list);\n\n  // we call thunk in redux store to fetch from API\n  useEffect(() => {\n    dispatch(fetchCities());\n  }, [dispatch]);\n\n  // Rendering the element\n  return (\n    <SelectContainer onSubmit={(event) => printThis(event, city)}>\n      <Select\n        width=\"200px\"\n        options={options}\n        onChange={(event) => dispatch(order.actions.setCity(event.value))}\n      />\n      <button type=\"submit\">Submit this MF</button>\n    </SelectContainer>\n  );\n};\n\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}