{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cities = createSlice({\n  name: \"cities\",\n  initialState: {\n    list: null,\n    isLoading: false\n  },\n  reducers: {\n    setList: (store, action) => {\n      store.list = action.payload;\n    },\n    setLoading: (store, action) => {\n      store.isLoading = action.payload;\n    }\n  }\n});\nexport const fetchCities = () => {\n  return dispatch => {\n    dispatch(cities.actions.setLoading(true));\n    fetch(\"http://localhost:8080/cities\").then(res => res.json()).then(json => {\n      dispatch(cities.actions.setList(json));\n      dispatch(cities.actions.setLoading(false));\n    });\n  };\n};\nexport default cities;","map":{"version":3,"sources":["/Users/reinis/Desktop/Technigo/final-project/frontend/src/reducers/cities.js"],"names":["createSlice","cities","name","initialState","list","isLoading","reducers","setList","store","action","payload","setLoading","fetchCities","dispatch","actions","fetch","then","res","json"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,MAAM,GAAGD,WAAW,CAAC;AACzBE,EAAAA,IAAI,EAAE,QADmB;AAEzBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,IADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFW;AAMzBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACC,OAApB;AACD,KAHO;AAIRC,IAAAA,UAAU,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACC,OAAzB;AACD;AANO;AANe,CAAD,CAA1B;AAgBA,OAAO,MAAME,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACZ,MAAM,CAACa,OAAP,CAAeH,UAAf,CAA0B,IAA1B,CAAD,CAAR;AACAI,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdL,MAAAA,QAAQ,CAACZ,MAAM,CAACa,OAAP,CAAeP,OAAf,CAAuBW,IAAvB,CAAD,CAAR;AACAL,MAAAA,QAAQ,CAACZ,MAAM,CAACa,OAAP,CAAeH,UAAf,CAA0B,KAA1B,CAAD,CAAR;AACD,KALH;AAMD,GARD;AASD,CAVM;AAYP,eAAeV,MAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cities = createSlice({\n  name: \"cities\",\n  initialState: {\n    list: null,\n    isLoading: false,\n  },\n  reducers: {\n    setList: (store, action) => {\n      store.list = action.payload;\n    },\n    setLoading: (store, action) => {\n      store.isLoading = action.payload;\n    },\n  },\n});\n\nexport const fetchCities = () => {\n  return (dispatch) => {\n    dispatch(cities.actions.setLoading(true));\n    fetch(\"http://localhost:8080/cities\")\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(cities.actions.setList(json));\n        dispatch(cities.actions.setLoading(false));\n      });\n  };\n};\n\nexport default cities;\n"]},"metadata":{},"sourceType":"module"}